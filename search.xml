<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>链表类刷题day5</title>
      <link href="/posts/2e2e.html"/>
      <url>/posts/2e2e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div class="note info">前言：努力刷题day5</div><br></p><h3 id="1-LeetCode-19-删除链表的倒数第-N-个结点-传送门"><a href="#1-LeetCode-19-删除链表的倒数第-N-个结点-传送门" class="headerlink" title="1.LeetCode 19. 删除链表的倒数第 N 个结点 传送门"></a>1.LeetCode 19. 删除链表的倒数第 N 个结点 <a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">传送门</a></h3><pre><code>class Solution &amp;#123;    public ListNode removeNthFromEnd(ListNode head, int n) &amp;#123;        ListNode dummyHead=new ListNode(-1);         dummyHead.next=head;        ListNode fast=dummyHead;        ListNode slow=dummyHead;        while(n-- &gt;0)        &amp;#123;            fast=fast.next;        &amp;#125;        fast=fast.next;        while(fast!=null)        &amp;#123;            fast=fast.next;            slow=slow.next;        &amp;#125;        slow.next=slow.next.next;        return dummyHead.next;    &amp;#125;&amp;#125;</code></pre><h3 id="2-LeetCode-面试题-02-07-链表相交-传送门"><a href="#2-LeetCode-面试题-02-07-链表相交-传送门" class="headerlink" title="2.LeetCode 面试题 02.07. 链表相交 传送门"></a>2.LeetCode 面试题 02.07. 链表相交 <a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists-lcci/">传送门</a></h3><pre><code>public class Solution &amp;#123;    public ListNode getIntersectionNode(ListNode headA, ListNode headB) &amp;#123;        ListNode curA = headA;        ListNode curB = headB;        int lenA = 0, lenB = 0;        while (curA != null) &amp;#123; // 求链表A的长度            lenA++;            curA = curA.next;        &amp;#125;        while (curB != null) &amp;#123; // 求链表B的长度            lenB++;            curB = curB.next;        &amp;#125;        curA = headA;        curB = headB;        // 让curA为最长链表的头，lenA为其长度        if (lenB &gt; lenA) &amp;#123;            //1. swap (lenA, lenB);            int tmpLen = lenA;            lenA = lenB;            lenB = tmpLen;            //2. swap (curA, curB);            ListNode tmpNode = curA;            curA = curB;            curB = tmpNode;        &amp;#125;        // 求长度差        int gap = lenA - lenB;        // 让curA和curB在同一起点上（末尾位置对齐）        while (gap-- &gt; 0) &amp;#123;            curA = curA.next;        &amp;#125;        // 遍历curA 和 curB，遇到相同则直接返回        while (curA != null) &amp;#123;            if (curA == curB) &amp;#123;                return curA;            &amp;#125;            curA = curA.next;            curB = curB.next;        &amp;#125;        return null;    &amp;#125;&amp;#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表类刷题day4</title>
      <link href="/posts/eeef.html"/>
      <url>/posts/eeef.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">努力刷题day4</div><h3 id="1-LeetCode-206-反转链表-传送门"><a href="#1-LeetCode-206-反转链表-传送门" class="headerlink" title="1.LeetCode 206.反转链表 传送门"></a>1.LeetCode 206.反转链表 <a href="https://leetcode-cn.com/problems/reverse-linked-list/">传送门</a></h3><pre><code>// 双指针class Solution &amp;#123;    public ListNode reverseList(ListNode head) &amp;#123;        ListNode prev = null;        ListNode cur = head;        ListNode temp = null;        while (cur != null) &amp;#123;            temp = cur.next;// 保存下一个节点            cur.next = prev;            prev = cur;            cur = temp;        &amp;#125;        return prev;    &amp;#125;&amp;#125;</code></pre><h3 id="2-LeetCode-24-两两交换链表中的节点-传送门"><a href="#2-LeetCode-24-两两交换链表中的节点-传送门" class="headerlink" title="2.LeetCode 24.两两交换链表中的节点 传送门"></a>2.LeetCode 24.两两交换链表中的节点 <a href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/">传送门</a></h3><pre><code>// 递归class Solution &amp;#123;    public ListNode swapPairs(ListNode head) &amp;#123;        if (head == null || head.next == null) &amp;#123;            return head;        &amp;#125;        ListNode newHead = head.next;        head.next = swapPairs(newHead.next);        newHead.next = head;        return newHead;    &amp;#125;&amp;#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表类刷题day3</title>
      <link href="/posts/2cae.html"/>
      <url>/posts/2cae.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">努力刷题day3</div><h3 id="1-LeetCode-203-移除链表元素-传送门"><a href="#1-LeetCode-203-移除链表元素-传送门" class="headerlink" title="1.LeetCode 203.移除链表元素 传送门"></a>1.LeetCode 203.移除链表元素 <a href="https://leetcode-cn.com/problems/remove-linked-list-elements/">传送门</a></h3><pre><code>class Solution &amp;#123;    public ListNode removeElements(ListNode head, int val) &amp;#123;        //删除值相同的头结点后，可能新的头结点也值相等，用循环解决        while(head!=null&amp;&amp;head.val==val)&amp;#123;            head=head.next;        &amp;#125;        if(head==null)            return head;        ListNode prev=head;        //确保当前结点后还有结点        while(prev.next!=null)&amp;#123;            if(prev.next.val==val)&amp;#123;                prev.next=prev.next.next;            &amp;#125;else&amp;#123;                prev=prev.next;            &amp;#125;        &amp;#125;        return head;    &amp;#125;&amp;#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组类刷题day2</title>
      <link href="/posts/4e.html"/>
      <url>/posts/4e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">努力刷题day2</div><h3 id="LeetCode-977-有序数组的平方-传送门"><a href="#LeetCode-977-有序数组的平方-传送门" class="headerlink" title="LeetCode 977.有序数组的平方 传送门"></a>LeetCode 977.有序数组的平方 <a href="https://leetcode-cn.com/problems/squares-of-a-sorted-array/">传送门</a></h3><p>:::default<br>code<br>:::</p><pre><code>class Solution &amp;#123;    public int[] sortedSquares(int[] nums) &amp;#123;        for(int i=0;i&lt;nums.length;i++)        &amp;#123;            nums[i]=nums[i]*nums[i];        &amp;#125;        Arrays.sort(nums);        return nums;    &amp;#125;&amp;#125;</code></pre><h3 id="LeetCode-209-长度最小的子数组传送门"><a href="#LeetCode-209-长度最小的子数组传送门" class="headerlink" title="LeetCode 209.长度最小的子数组传送门"></a>LeetCode 209.长度最小的子数组<a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">传送门</a></h3><p>:::default<br>code<br>:::</p><pre><code>class Solution &amp;#123;    public int minSubArrayLen(int s, int[] nums) &amp;#123;        int n = nums.length;        if (n == 0) &amp;#123;            return 0;        &amp;#125;        int ans = Integer.MAX_VALUE;        for (int i = 0; i &lt; n; i++) &amp;#123;            int sum = 0;            for (int j = i; j &lt; n; j++) &amp;#123;                sum += nums[j];                if (sum &gt;= s) &amp;#123;                    ans = Math.min(ans, j - i + 1);                    break;                &amp;#125;            &amp;#125;        &amp;#125;        return ans == Integer.MAX_VALUE ? 0 : ans;    &amp;#125;&amp;#125;</code></pre><p>+++primary 今日份总结<br>:::info<br>（1） Arrays.sort()使用方法：<a href="https://blog.csdn.net/qq_41763225/article/details/82890122/">传送门-转载-侵删致谢</a><br>（2）Integer.MAX_VALUE的含义：<a href="https://blog.csdn.net/weixin_44824500/article/details/104768290">传送门-转载-侵删致谢</a></p><p>:::</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔试面试总结（关于测试</title>
      <link href="/posts/620e.html"/>
      <url>/posts/620e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">找到工作了，一直想写一份面经汇总，奈何拖延症晚期，先开个坑，早晚得填！！！</div>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组类刷题day1</title>
      <link href="/posts/10e.html"/>
      <url>/posts/10e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">努力刷题day1                                                         </div><h3 id="LeetCode-704-二分查找【传送门】"><a href="#LeetCode-704-二分查找【传送门】" class="headerlink" title="LeetCode 704.二分查找【传送门】"></a>LeetCode 704.二分查找【<a href="https://leetcode-cn.com/problems/binary-search/">传送门</a>】</h3><p>:::default<br>code<br>:::</p><pre><code>class Solution &amp;#123;    public int search(int[] nums, int target) &amp;#123;        // 避免当 target 小于nums[0] nums[nums.length - 1]时多次循环运算        if (target &lt; nums[0] || target &gt; nums[nums.length - 1]) &amp;#123;            return -1;        &amp;#125;        int left = 0, right = nums.length - 1;        while (left &lt;= right) &amp;#123;            int mid = left + ((right - left) &gt;&gt; 1);            if (nums[mid] == target)                return mid;            else if (nums[mid] &lt; target)                left = mid + 1;            else if (nums[mid] &gt; target)                right = mid - 1;        &amp;#125;        return -1;    &amp;#125;&amp;#125;</code></pre><h3 id="LeetCode-27-移除元素【传送门】"><a href="#LeetCode-27-移除元素【传送门】" class="headerlink" title="LeetCode 27.移除元素【传送门】"></a>LeetCode 27.移除元素【<a href="https://leetcode-cn.com/problems/remove-element/">传送门</a>】</h3><p>:::default<br>code<br>:::</p><pre><code>class Solution &amp;#123;    public int removeElement(int[] nums, int val) &amp;#123;        // 快慢指针        int fastIndex = 0;        int slowIndex;        for (slowIndex = 0; fastIndex &lt; nums.length; fastIndex++) &amp;#123;            if (nums[fastIndex] != val) &amp;#123;                nums[slowIndex] = nums[fastIndex];                slowIndex++;            &amp;#125;        &amp;#125;        return slowIndex;    &amp;#125;&amp;#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建图床</title>
      <link href="/posts/e5f3.html"/>
      <url>/posts/e5f3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">最近搭建好Hexo博客，昨天开始迁移博客的时候，思考图片存储问题。于是，开始搜索，看到大家都是用一个云+Picgo+Typora搭建了一个图床。前几天在找Markdown编辑器的时候，最初的想法也是用Typora，但是奈何官网进不去，遂转入MWeb。</div><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="阿里云OSS"><a href="#阿里云OSS" class="headerlink" title="阿里云OSS"></a>阿里云OSS</h2><p>1.链接：<a href="https://www.aliyun.com/product/oss">https://www.aliyun.com/product/oss</a><br>2.开通：一年9块钱<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111410220.png" alt><br>3.创建Bucket列表<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111414857.png" alt><br>4.生成 Access Key和AccessKey Secret<br>（在下图右下角常见入口，左侧第二个）<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111415577.png" alt></p><h2 id="Picgo"><a href="#Picgo" class="headerlink" title="Picgo"></a>Picgo</h2><p>1.下载：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a><br>按照作者的教程来就行，需要注意的就是Mac会提示风险app，在安全里允许一下就好了<br>2.配置：如图<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111444858.png" alt><br>值得说的是，我在上传图片的时候报403，说说解决办法，首先在PicGO设置里看起服务，确保自己配置信息没有写错。<br>上传失败一定在PicGo中看看日志文件。</p><h2 id="Mweb"><a href="#Mweb" class="headerlink" title="Mweb"></a>Mweb</h2><p>1.下载：APP Store<br>2.配置<br>(1)在这里选择偏好设置—-&gt;<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111425766.png" alt><br>(2)按照下图点击—-&gt;<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111431149.png" alt><br>(3)填写配置信息<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111435044.png" alt><br>（4）填写好后点击确定，发布服务。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>上述完成后就可以使用了，有图片就上传到PicGo，然后复制图片代码，在写博客的时候粘贴即可。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长春径点科技有限公司-软件测试 面试</title>
      <link href="/posts/be61.html"/>
      <url>/posts/be61.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>第一次正式面试，我很蠢。</p></blockquote><h3 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h3><p>1.你先进行一下自我介绍吧！</p><p>2.你理解 ip 么？</p><p>3.你用过微信传输助手吗？如果你进行测试测试点怎么考虑？</p><p>4.你了解虚拟机吗？</p><p>5.用过 sql server 么？还记得查询语句么？</p><p>6.你理解测试流程么？你对迭代测试的理解？集成测试的理解？</p><p>7.你自学过什么技术么？</p><p>8.你之前做过前端岗位，为什么想做测试？</p><p>9.薪资问题。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于itsNeko开源博客食用方法</title>
      <link href="/posts/itsneko-opensource-blog.html"/>
      <url>/posts/itsneko-opensource-blog.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">前言：本文是关于itsNeko开源博客食用方法详解，感谢使用本开源博客。时间过的好快，还好我都记录下来了。</div><h3 id="itsNeko开源介绍"><a href="#itsNeko开源介绍" class="headerlink" title="itsNeko开源介绍"></a>itsNeko开源介绍</h3><ul><li>基于<br>itsNeko开源博客是基于Hexo博客Matery主题魔改，感谢各位对本博客的喜爱与支持。</li><li>作者<br>Hello，itsNeko，我是本博客的作者，itsNeko博主博客: <a href="https://dyfa.top/" target="_blank">itsNeko博客~</a></li><li>赞赏<br>如果你觉得本开源博客还可以，欢迎大家的赞赏，赞赏二维码见页面：<a href="https://dyfa.top/donate/" target="_blank">赞赏itsNeko开源博主~</a></li><li>提示<br>本博客为纯静态，无数据库，文章使用markdown格式，图片存在json里面，整体打包上传至服务器即可。</li><li>建议<br>最好懂一点编程知识，建议使用VsCode，善于使用<code>“ ctrl+F ”</code>快捷键定位然后修改自定义内容。</li></ul><h3 id="源码下载及命令"><a href="#源码下载及命令" class="headerlink" title="源码下载及命令"></a>源码下载及命令</h3><ul><li>本开源博客源码已公开在在博主的GitHub仓库，国内也可使用Gitee，希望得到各位的<code>小星星，Star</code>。</li><li>GitHub仓库：<a href="https://github.com/nekodeng/hexo-theme-itsneko.git" target="_blank">itsNeko开源博客源码GitHub地址</a></li><li><p>Gitee仓库：<a href="https://gitee.com/nekodeng/hexo-theme-itsneko.git" target="_blank">itsNeko开源博客源码Gitee地址</a></p></li><li><p>首先，新建一个文件夹名为“ <code>nekoblog</code> ”，在该文件夹下打开git bash，执行命令行</p></li></ul><pre><code>git clone https://github.com/nekodeng/hexo-theme-itsneko.git或者使用国内的giteegit clone https://gitee.com/nekodeng/hexo-theme-itsneko.git</code></pre><ul><li>将下载的整个文件夹在VsCode中打开，在终端中依次执行以下命令行</li></ul><pre><code>npm installhexo cleanhexo ghexo s</code></pre><ul><li>然后在浏览器中，打开“ <a href="http://localhost:4000/">http://localhost:4000/</a> ”，即可实时预览网站，再依次修改网站内容。</li></ul><p>注意：依次执行完上述4条命令后，若遇到报错极大概率是npm install的问题，也可能是网络问题，建议删除整个“ node_modules ”文件夹，然后重新执行上述命令行。</p><h3 id="各页面配置详解"><a href="#各页面配置详解" class="headerlink" title="各页面配置详解"></a>各页面配置详解</h3><h4 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h4><h5 id="1、网站标题描述等"><a href="#1、网站标题描述等" class="headerlink" title="1、网站标题描述等"></a>1、网站标题描述等</h5><p>在<code>/nekoblog/_config.yml</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ Site ”</code>，然后自行修改内容。</p><h5 id="2、logo图片与logo字体"><a href="#2、logo图片与logo字体" class="headerlink" title="2、logo图片与logo字体"></a>2、logo图片与logo字体</h5><ul><li>logo图片:<br>在<code>/themes/_config.yml</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ 配置网站favicon和网站LOGO ”</code>，然后自行修改图片并注意图片格式（此处建议图片大小为180*116最佳）。</li><li>logo字体:<br>在<code>/themes/layout/_partial/header.ejs</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ itsNeko-openSource-Blog ”</code>，然后自行修改大屏幕和小屏幕下logo字体（此处建议小屏下字体数目不宜过多）。 </li></ul><h5 id="3、banner图上打字效果字体"><a href="#3、banner图上打字效果字体" class="headerlink" title="3、banner图上打字效果字体"></a>3、banner图上打字效果字体</h5><p>在<code>/themes/_config.yml</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ sub1 ”</code>，然后自行修改。</p><h5 id="4、《质数的孤独》内容部分"><a href="#4、《质数的孤独》内容部分" class="headerlink" title="4、《质数的孤独》内容部分"></a>4、《质数的孤独》内容部分</h5><p>在<code>/themes/layout/_widget/dream.ejs</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ 《质数的孤独》 ”</code>，然后自行修改标题和内容。</p><h5 id="5、公告栏作者等内容部分"><a href="#5、公告栏作者等内容部分" class="headerlink" title="5、公告栏作者等内容部分"></a>5、公告栏作者等内容部分</h5><p>在<code>/themes/layout/index.ejs</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ 公告文字栏开始 ”</code>，然后自行修改内容。</p><h5 id="6、footer内容部分"><a href="#6、footer内容部分" class="headerlink" title="6、footer内容部分"></a>6、footer内容部分</h5><p>在<code>/themes/layout/_partial/footer.ejs</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ 版权信息 ”</code>，然后自行修改各类内容；此处还要在<code>/themes/_config.yml</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ socialLink ”</code>，然后自行修改。</p><h4 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h4><h5 id="1、配置个人信息"><a href="#1、配置个人信息" class="headerlink" title="1、配置个人信息"></a>1、配置个人信息</h5><p>在<code>/themes/_config.yml</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ profile ”</code>，然后自行修改头像、职业和个人介绍。</p><h5 id="2、个人介绍内容"><a href="#2、个人介绍内容" class="headerlink" title="2、个人介绍内容"></a>2、个人介绍内容</h5><p>在<code>/themes/layout/about.ejs</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ 关于我哦 ”</code>，然后自行个人介绍介绍。</p><h4 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h4><h5 id="1、页面介绍"><a href="#1、页面介绍" class="headerlink" title="1、页面介绍"></a>1、页面介绍</h5><p>在<code>/themes/layout/galley.ejs</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ itsNeko开源博客相册 ”</code>，然后自行修改此内容。</p><h5 id="2、相册数据"><a href="#2、相册数据" class="headerlink" title="2、相册数据"></a>2、相册数据</h5><p>相册是存在json里面的，在<code>/nekoblog/source/_data/galley.json</code>文件中。一个相册就是在一个{}对象内的json数据。</p><h5 id="3、新建一个相册流程"><a href="#3、新建一个相册流程" class="headerlink" title="3、新建一个相册流程"></a>3、新建一个相册流程</h5><ul><li>首先，找到<code>/nekoblog/source/galley</code>文件夹。</li><li>复制已存在的“ itsNeko博主的绘画作品 ”文件夹，并取名。</li><li>打开新取名文件夹下的index.md文件，然后修改title字段必须与新取名文件夹名称相同，否则运行报错。</li><li>然后，在<code>/nekoblog/source/_data/galley.json</code>文件中，复制已存在的{}对象内的json数据，与第一段并以逗号区隔，然后修改新相册的各类内容。并注意：<code>name，url_name，album内的title这三个字段内容必须与新取名文件夹名称相同，否则运行报错。</code></li></ul><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><h5 id="增加友情链接"><a href="#增加友情链接" class="headerlink" title="增加友情链接"></a>增加友情链接</h5><ul><li>友链信息是存储在<code>/nekoblog/source/_data/friends.json</code>文件中，一个友链就是在一个{}对象内的json数据，自行增添。</li></ul><h5 id="增加网址收藏"><a href="#增加网址收藏" class="headerlink" title="增加网址收藏"></a>增加网址收藏</h5><ul><li>网址收藏信息是存储在<code>/nekoblog/source/_data/collection.json</code>文件中，一个网址信息就是在一个{}对象内的json数据，自行增添。</li></ul><h4 id="其余"><a href="#其余" class="headerlink" title="其余"></a>其余</h4><p>其余页面自定义修改的内容不多，或者没必要修改，这里给出其余页面的对应文件，可自行根据需要定位到对应页面文件中进行修改。</p><ul><li><code>书单 -&gt; /themes/layout/books.ejs</code></li><li><code>留言板 -&gt; /themes/layout/contact.ejs</code></li><li><code>实战项目 -&gt; /themes/layout/project.ejs</code></li><li><code>博客打赏记录 -&gt; /themes/layout/donate.ejs</code></li><li><code>ticktack -&gt; /themes/layout/ticktack.ejs</code></li><li><code>实战项目 -&gt; /themes/layout/project.ejs</code></li><li><code>vlog -&gt; /themes/layout/videos.ejs</code><br>使用“ ctrl+F ”快捷键定位到<code>“ src=”//player.bilibili ”</code>，然后自行修改两个视频的src，建议使用B站的外链。</li><li><code>music -&gt; /themes/layout/musics.ejs</code><br>使用“ ctrl+F ”快捷键定位到<code>“ id=” ”</code>，然后自行修改两个歌单的id，建议使用网易云和QQ音乐的外链。</li><li><code>urls.txt -&gt; /nekoblog/urls.txt</code>将内容替换成自己网站的url地址即可。</li><li><code>网站2个_config.yml文件 -&gt; 主要是网站的总体配置，自行打开两个文件然后只修改里面的包含个人信息的部分，其余不动。</code></li></ul><h3 id="撰写第一篇文章"><a href="#撰写第一篇文章" class="headerlink" title="撰写第一篇文章"></a>撰写第一篇文章</h3><ul><li>修改完个人信息后，你便可以撰写属于你的第一篇文章啦。</li><li>文章采用markdown语法，所有文章存储在<code>/nekoblog/source/_posts</code>文件夹中。</li><li>这里我已给出常用的两类文章模板，可直接复制粘贴然后（修改文章名，链接后缀建议用英文，标签建议只用一个，分类，时间，以及文章banner图片）形成新的文章。</li></ul><h3 id="怎样开通评论"><a href="#怎样开通评论" class="headerlink" title="怎样开通评论"></a>怎样开通评论</h3><ul><li>本开源博客使用valine评论，环境以及搭好，只需填写valine配置数据即可。</li><li>自行根据网上教程得到配置数据，关键词 “ Hexo 博客添加 Valine 评论系统 ”，教程之一：<a href="https://www.zhyong.cn/posts/95cb/" target="_blank">Hexo 博客添加 Valine 评论系统</a></li><li>注意：本开源博客中已经搭好了环境，<code>比如valine.min.js，valine.ejs等文件已经存在，不用再根据教程添加这些文件</code>，只需根据教程步骤配置其余，然后获取到 APP ID 和 APP KEY。</li><li>然后，将获取到的 APP ID 和 APP KEY，在<code>/themes/_config.yml</code>文件中，使用“ ctrl+F ”快捷键定位到<code>“ valine ”</code>，然后自行修改appId，appKey值即可。</li><li>多说一句，若最后评论功能总是报错，不知道怎么弄，那么建议一切根据外链教程（这个不行，换个完整版教程）操作，可替换本博客已经存在的环境文件，<code>学会自己独立使用浏览器解决问题</code>。</li></ul><h3 id="网站怎样上线"><a href="#网站怎样上线" class="headerlink" title="网站怎样上线"></a>网站怎样上线</h3><ul><li><p><code>免费版 使用gitee免费托管</code><br>关键词，“ Hexo部署到Gitee ”，随机教程：<a href="https://blog.csdn.net/qq_38157825/article/details/112783631" target="_blank">Hexo 部署到 Gitee</a></p></li><li><p><code>收费版 自行购买域名服务器</code><br>关键词，“ Hexo部署到自己服务器 ”</p></li></ul><h3 id="七零八碎补充"><a href="#七零八碎补充" class="headerlink" title="七零八碎补充"></a>七零八碎补充</h3><p>可自行根据需要定位到对应文件中进行修改。</p><ul><li><p><code>赞赏二维码图片 -&gt; /themes/source/medias/reward</code></p></li><li><p><code>鼠标左键点击文字 -&gt; /themes/source/js/click_show_text.js</code></p></li><li><p><code>网站标题栏和footer栏背景颜色 -&gt; /themes/source/css/matery.css</code><br>在该文件中使用“ ctrl+F ”快捷键定位到<code>“ 网站标题栏和footer栏背景颜色 ”</code>，然后自行修改颜色。</p></li><li><p><code>各大页面banner图 -&gt; 若你不想使用默认图片，将以下代码复制到对应页面ejs文件中并修改图片链接即可。</code></p></li></ul><pre><code>    &lt;style&gt;      /* banner背景图 */      .bg-cover &amp;#123;          background-image: url(&quot;图片链接地址&quot;)!important;      &amp;#125;    &lt;/style&gt;</code></pre><h3 id="怎样联系itsNeko"><a href="#怎样联系itsNeko" class="headerlink" title="怎样联系itsNeko"></a>怎样联系itsNeko</h3><ul><li>留言：itsNeko博客地址:<a href="https://dyfa.top/" target="_blank">itsNeko博客~</a></li><li>邮箱：nekodeng@qq.com</li><li>QQ: 2018854221</li></ul>]]></content>
      
      
      <categories>
          
          <category> itsNeko博客食用方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关于itsNeko开源博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是技术文章模板</title>
      <link href="/posts/articletemplate.html"/>
      <url>/posts/articletemplate.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">前言，技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言技术文章前言。</div><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><ul><li>项目1</li><li>项目2</li><li>项目3</li></ul><p>正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文正文</p><p><img src="/posts/articletemplate.htm/图片url" alt="图片介绍"></p><p><code>正文一些需要高亮色的文字</code></p><p><a href="链接地址" class="LinkCard" target="_blank">引入链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eclipse 点击new菜单后没有新建java project的解决方案</title>
      <link href="/posts/3f60.html"/>
      <url>/posts/3f60.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>侵删致谢</p></blockquote><p>运行github上的大佬的代码：<a href="https://github.com/YunYang1994/tensorflow-yolov3">https://github.com/YunYang1994/tensorflow-yolov3</a>，在进行python train.py的时候:ValueError: not enough values to unpack (expected 3, got 0),github中部分解决方法<a href="https://github.com/YunYang1994/tensorflow-yolov3/issues/396">https://github.com/YunYang1994/tensorflow-yolov3/issues/396</a>，但尝试后都没有成功运行，后来发现只是因为路径包含中文。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip安装更新问题</title>
      <link href="/posts/6074.html"/>
      <url>/posts/6074.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>侵删致谢</p></blockquote><h3 id="pip-问题"><a href="#pip-问题" class="headerlink" title="pip 问题"></a>pip 问题</h3><p>安装或更新都会出现一下问题：<br>```ERROR: Exception:<br>Traceback (most recent call last):</p><pre><code>解决办法就是找个镜像：推荐（XXX是需要安装的）```pip install XXX -i http://pypi.douban.com/simple --trusted-host pypi.douban.com</code></pre><h3 id="使用oenpyxl的问题"><a href="#使用oenpyxl的问题" class="headerlink" title="使用oenpyxl的问题"></a>使用oenpyxl的问题</h3><p>1、如下：</p><p>```TypeError: got invalid input value of type <class 'xml.etree.elementtree.element'>, expected string </class></p><pre><code>openpyxl版本问题，我把本身自带的版本3.0.2卸载，安装了3.0.0后就不再出现次错误。安装3.0.0```pip install openpyxl==3.0.0 -i http://pypi.douban.com/simple --trusted-host pypi.douban.com</code></pre><p><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201191016019.png" alt></p><p>卸载3.0.2<br><code>pip uninstall openpyxl</code><br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201191017522.png" alt></p><p>补充：网上有教程是包冲突，我卸载了lxml，还是会报错，不过大家可以尝试一下。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是随笔文章模板</title>
      <link href="/posts/essay-demo.html"/>
      <url>/posts/essay-demo.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="这是博主的随笔板块，后续会更新文章，目前弄好了模板格式"><a href="#这是博主的随笔板块，后续会更新文章，目前弄好了模板格式" class="headerlink" title="这是博主的随笔板块，后续会更新文章，目前弄好了模板格式~"></a>这是博主的随笔板块，后续会更新文章，目前弄好了模板格式~</h4><div class="ipage">    <div class="ititle">节选自《你若安好便是晴天》- 前言</div>  <div class="izhengwen">  <p>几场梅雨，几卷荷风，江南已是烟水迷离。小院里湿润的青苔在雨中纯净生长。这个季节，许多人都在打听关于莲荷的消息，以及茉莉在黄昏浮动的神秘幽香。不知多少人会记得有个女子，曾经走过人间四月天，又与莲开的夏季有过相濡以沫的约定。</p>  <p>一个人，一本书，一杯茶，一帘梦。有时候，寂寞是这样叫人心动，也只有此刻，世事才会如此波澜不惊。凉风吹起书页，这烟雨让尘封在书卷里的词章和故事弥漫着潮湿的气息。独倚幽窗，看转角处的青石小巷，一柄久违的油纸伞，遮住了低过屋檐的光阴。</p>  <p>时光微凉，那一场远去的往事被春水浸泡，秋风吹拂，早已洗去铅华，清绝明净。以为历经人生匆匆聚散，尝过尘世种种烟火，应该承担岁月带给我们的沧桑。可流年分明安然无恙，而山石草木是这样毫发无伤。只是曾经许过地老天荒的城，在细雨中越发地清瘦单薄。</p>  <p>青梅煎好的茶水，还是当年的味道；而我们等候的人，不会再来。后来才知道，那一袭素色白衣的女子已化身为燕，去寻觅水乡旧巢。她走过的地方，有一树一树的花开，她呢喃的梁间，还留着余温犹存的梦。有人说，她是个冰洁的女子，所以无论人世如何变迁，她都有着美丽的容颜。有人说，她是个理智的女子，不管面临怎样的诱惑，最后都可以全身而退。</p>  <p>她叫林徽因，出生于杭州，是许多人梦中期待的白莲。她在雨雾之都伦敦，发生过一场空前绝后的康桥之恋。她爱过三个男子，爱得清醒，也爱得平静。徐志摩为她徜徉在康桥，深情地等待一场旧梦可以归来。梁思成与她携手走过千山万水，为完成使命而相约白头。金岳霖为她终身不娶，痴心不改地守候一世。可她懂得人生飘忽不定，要学会随遇而安。</p>  </div></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>citespace使用方法/经验总结</title>
      <link href="/posts/ec7a.html"/>
      <url>/posts/ec7a.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-citespace初学者使用："><a href="#1-citespace初学者使用：" class="headerlink" title="1. citespace初学者使用："></a>1. citespace初学者使用：</h3><p><a href="https://wenku.baidu.com/view/4da3fd1a6294dd88d1d26b64.html%20%20%20%20%20">https://wenku.baidu.com/view/4da3fd1a6294dd88d1d26b64.html     </a><br><a href="https://www.jianshu.com/p/49d41d0ccd7fhttps://www.jianshu.com/p/49d41d0ccd7f%20%20%20%20">https://www.jianshu.com/p/49d41d0ccd7fhttps://www.jianshu.com/p/49d41d0ccd7f    </a>   </p><h3 id="2-有一个公众号“学术点滴”，感谢大佬"><a href="#2-有一个公众号“学术点滴”，感谢大佬" class="headerlink" title="2. 有一个公众号“学术点滴”，感谢大佬"></a>2. 有一个公众号“学术点滴”，感谢大佬</h3><h3 id="3-解决关键词聚类标签显示省略号问题："><a href="#3-解决关键词聚类标签显示省略号问题：" class="headerlink" title="3. 解决关键词聚类标签显示省略号问题："></a>3. 解决关键词聚类标签显示省略号问题：</h3><p><a href="http://blog.sciencenet.cn/blog-3195540-1053515.html">http://blog.sciencenet.cn/blog-3195540-1053515.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24点游戏 python</title>
      <link href="/posts/620e.html"/>
      <url>/posts/620e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>常见游戏规则：<br>从扑克中每次取出4张牌。使用加减乘除，第一个能得出24者为赢。（其中，J代表&gt;11，Q代表12，K代表13，A代表1），按照要求编程解决24点游戏。</p></blockquote><p>随机产生四个数字用python中的函数进行全排列<br>随机数的生成：<br>对于python随机数的生成，通过导入包来实现，即import  random<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222143990.png" alt><br>本程序中因为要生成4个（1——13）的整形数字，采用randint<br>对四个随机数的全排列：<br>对于python可以通过python的包itertools所以不用自己写递归函数实现</p><pre class=" language-lang-itertools.permutations"><code class="language-lang-itertools.permutations">```通俗地讲，就是返回可迭代对象的所有数学全排列方式。```listCardSet = list(set(itertools.permutations(listCardNum, 4)))#全排列4个数return  listCardSet</code></pre><p>例如：8,13,3,5产生的全排列</p><p>(8, 13, 3, 5), (13, 5, 8, 3), (5, 3, 8, 13), (13, 3, 8, 5), (3, 5, 8, 13), (3, 13, 5, 8),</p><p> (3, 5, 13, 8), (5, 3, 13, 8), (8, 13, 5, 3), (8, 5, 13, 3), (8, 3, 5, 13), (5, 8, 3, 13),</p><p> (13, 8, 3, 5), (13, 3, 5, 8), (8, 3, 13, 5), (5, 8, 13, 3), (3, 8, 13, 5), (5, 13, 3, 8),</p><p> (13, 8, 5, 3), (5, 13, 8, 3), (8, 5, 3, 13), (3, 13, 8, 5), (3, 8, 5, 13), (13, 5, 3, 8)</p><p>显示：<br>```if <strong>name</strong> == “<strong>main</strong>“:<br>    print(“<strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong>欢迎进入24点游戏<strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong>“)<br>    print(“该系统会随机产生四张牌，并帮助您算出可以实现24点的所有算法”)</p><pre><code> ![](https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222146226.png)代码分析：I.需要的包：```import itertoolsimport random</code></pre><p>II.随机产生数字和全排列：</p><p>```def card_rand():<br>    for i in range(4):<br>        list_random.append(random.randint(1, 13))                    #list.append(obj)<br>    list_quanpai = list(set(itertools.permutations(list_random, 4)))#全排列4个数<br>    return  list_quanpai<br>listCard = card_rand()  # 排列组合结果</p><h1 id="print-listCard-输出所有排列"><a href="#print-listCard-输出所有排列" class="headerlink" title="print(listCard)#输出所有排列"></a>print(listCard)#输出所有排列</h1><p>```III. 计算函数：</p><p>```def card_calculate():<br>    for i in range(len(listCard)):<br>        list1_Card = listCard[i]</p><pre><code>    cardOne = list1_Card[0]    cardTwo = list1_Card[1]    cardThree = list1_Card[2]    cardFour = list1_Card[3]  # 得到四张牌的点数    flag = False  # 标志位    try:        for o1 in listOperator:            resultOne = 0  # 前两个数的运算结果            if o1 == &quot;+&quot;:                resultOne = cardOne+cardTwo            elif o1 == &quot;-&quot;:                resultOne = cardOne-cardTwo            elif o1 == &quot;*&quot;:                resultOne = cardOne*cardTwo            elif o1 == &quot;/&quot;:                resultOne = cardOne/cardTwo            for o2 in listOperator:                resultTwo = 0  # 前三个数的运算结果                if o2 == &quot;+&quot;:                    resultTwo = resultOne + cardThree                elif o2 == &quot;-&quot;:                    resultTwo = resultOne - cardThree                elif o2 == &quot;*&quot;:                    resultTwo = resultOne * cardThree                elif o2 == &quot;/&quot;:                    resultTwo = resultOne / cardThree                for o3 in listOperator:                    resultThree = 0  # 四个数的运算结果                    resultFinal = 0  # 最后两个数的运算结果                    if o3 == &quot;+&quot;:                        resultThree = resultTwo + cardFour                        resultFinal = cardThree + cardFour                    elif o3 == &quot;-&quot;:                        resultThree = resultTwo - cardFour                        resultFinal = cardThree - cardFour                    elif o3 == &quot;*&quot;:                        resultThree = resultTwo * cardFour                        resultFinal = cardThree * cardFour                    elif o3 == &quot;/&quot;:                        resultThree = resultTwo / cardFour                        resultFinal = cardThree / cardFour</code></pre><p>```<br>源码：<a href="https://download.csdn.net/download/qq_41233643/11112033">https://download.csdn.net/download/qq_41233643/11112033</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
