<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>哈希表类刷题day10</title>
      <link href="/posts/nulishuaitishi.html"/>
      <url>/posts/nulishuaitishi.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div class="note info">前言：努力刷题day10</div>&lt;</p><h3 id="LeetCode-15-三数之和-传送门"><a href="#LeetCode-15-三数之和-传送门" class="headerlink" title="LeetCode 15. 三数之和 传送门"></a>LeetCode 15. 三数之和 <a href="https://leetcode-cn.com/problems/3sum/">传送门</a></h3><pre><code>//双指针发class Solution &amp;#123;    public List&lt;List&lt;Integer&gt;&gt; threeSum(int[] nums) &amp;#123;        List&lt;List&lt;Integer&gt;&gt; result = new ArrayList&lt;&gt;();        Arrays.sort(nums);        for (int i = 0; i &lt; nums.length; i++) &amp;#123;            if (nums[i] &gt; 0) &amp;#123;                return result;            &amp;#125;            if (i &gt; 0 &amp;&amp; nums[i] == nums[i - 1]) &amp;#123;                continue;            &amp;#125;            int left = i + 1;            int right = nums.length - 1;            while (right &gt; left) &amp;#123;                int sum = nums[i] + nums[left] + nums[right];                if (sum &gt; 0) &amp;#123;                    right--;                &amp;#125; else if (sum &lt; 0) &amp;#123;                    left++;                &amp;#125; else &amp;#123;                    result.add(Arrays.asList(nums[i], nums[left], nums[right]));                    while (right &gt; left &amp;&amp; nums[right] == nums[right - 1]) right--;                    while (right &gt; left &amp;&amp; nums[left] == nums[left + 1]) left++;                    right--;                     left++;                &amp;#125;            &amp;#125;        &amp;#125;        return result;    &amp;#125;&amp;#125;</code></pre><h3 id="LeetCode-18-四数之和-传送门"><a href="#LeetCode-18-四数之和-传送门" class="headerlink" title="LeetCode 18. 四数之和 传送门"></a>LeetCode 18. 四数之和 <a href="https://leetcode-cn.com/problems/4sum/">传送门</a></h3><pre><code>//双指针法class Solution &amp;#123;    public List&lt;List&lt;Integer&gt;&gt; fourSum(int[] nums, int target) &amp;#123;        List&lt;List&lt;Integer&gt;&gt; result = new ArrayList&lt;&gt;();        Arrays.sort(nums);        for (int i = 0; i &lt; nums.length; i++) &amp;#123;            if (i &gt; 0 &amp;&amp; nums[i - 1] == nums[i]) &amp;#123;                continue;            &amp;#125;            for (int j = i + 1; j &lt; nums.length; j++) &amp;#123;                if (j &gt; i + 1 &amp;&amp; nums[j - 1] == nums[j]) &amp;#123;                    continue;                &amp;#125;                int left = j + 1;                int right = nums.length - 1;                while (right &gt; left) &amp;#123;                    int sum = nums[i] + nums[j] + nums[left] + nums[right];                    if (sum &gt; target) &amp;#123;                        right--;                    &amp;#125; else if (sum &lt; target) &amp;#123;                        left++;                    &amp;#125; else &amp;#123;                        result.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));                        while (right &gt; left &amp;&amp; nums[right] == nums[right - 1]) right--;                        while (right &gt; left &amp;&amp; nums[left] == nums[left + 1]) left++;                        left++;                        right--;                    &amp;#125;                &amp;#125;            &amp;#125;        &amp;#125;        return result;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈希表类刷题day9</title>
      <link href="/posts/nulishuaitijiu.html"/>
      <url>/posts/nulishuaitijiu.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div class="note info">前言：努力刷题day9</div>&lt;</p><h3 id="LeetCode-454-四数相加-II-传送门"><a href="#LeetCode-454-四数相加-II-传送门" class="headerlink" title="LeetCode 454. 四数相加 II 传送门"></a>LeetCode 454. 四数相加 II <a href="https://leetcode-cn.com/problems/4sum-ii/">传送门</a></h3><pre><code>class Solution &amp;#123;    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) &amp;#123;        Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();        //Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();        int res = 0;        for(int i = 0;i&lt;A.length;i++)&amp;#123;            for(int j= 0;j&lt;B.length;j++)&amp;#123;                int sumAB = A[i]+B[j];                if(map.containsKey(sumAB)) map.put(sumAB,map.get(sumAB)+1);                else map.put(sumAB,1);            &amp;#125;        &amp;#125;        for(int i = 0;i&lt;C.length;i++)&amp;#123;            for(int j = 0;j&lt;D.length;j++)&amp;#123;                int sumCD = -(C[i]+D[j]);                if(map.containsKey(sumCD)) res += map.get(sumCD);            &amp;#125;        &amp;#125;        return res;    &amp;#125;&amp;#125;</code></pre><h3 id="LeetCode-383-赎金信-传送门"><a href="#LeetCode-383-赎金信-传送门" class="headerlink" title="LeetCode 383. 赎金信 传送门"></a>LeetCode 383. 赎金信 <a href="https://leetcode-cn.com/problems/ransom-note/">传送门</a></h3><pre><code>class Solution &amp;#123;    public boolean canConstruct(String ransomNote, String magazine) &amp;#123;        //记录杂志字符串出现的次数        int[] arr = new int[26];        int temp;        for (int i = 0; i &lt; magazine.length(); i++) &amp;#123;            temp = magazine.charAt(i) - &#39;a&#39;;            arr[temp]++;        &amp;#125;        for (int i = 0; i &lt; ransomNote.length(); i++) &amp;#123;            temp = ransomNote.charAt(i) - &#39;a&#39;;            //对于金信中的每一个字符都在数组中查找            //找到相应位减一，否则找不到返回false            if (arr[temp] &gt; 0) &amp;#123;                arr[temp]--;            &amp;#125; else &amp;#123;                return false;            &amp;#125;        &amp;#125;        return true;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站念安老师课程HTML+CSS笔记</title>
      <link href="/posts/qianduan11.html"/>
      <url>/posts/qianduan11.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HTML、CSS与JS的关系"><a href="#HTML、CSS与JS的关系" class="headerlink" title="HTML、CSS与JS的关系"></a>HTML、CSS与JS的关系</h2><hr><p><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204241527153.png" alt></p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><hr><h3 id="1-基础语法"><a href="#1-基础语法" class="headerlink" title="1.基础语法"></a>1.基础语法</h3><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p><strong>单标签：</strong></p><ul><li>无属性&lt;标签名/&gt;</li><li>有属性&lt;标签名 属性名=”属性值”/&gt;<br><strong>双标签：</strong></li><li>无属性 &lt;标签名&gt;&lt;/标签名&gt;</li><li>有属性 &lt;标签名 属性名=”属性值”&gt;&lt;/标签名&gt;<h4 id="整体结构"><a href="#整体结构" class="headerlink" title="整体结构"></a>整体结构</h4></li></ul><pre><code>&lt;html&gt;&lt;/html&gt; 表示当前是一个网页&lt;head&gt;&lt;/head&gt; 头部信息&lt;body&gt;&lt;/body&gt;  身体部分</code></pre><h3 id="2-常用标签"><a href="#2-常用标签" class="headerlink" title="2.常用标签"></a>2.常用标签</h3><p>⚠️ 标签的属性之间要以空格隔开</p><h4 id="body标签"><a href="#body标签" class="headerlink" title="body标签"></a>body标签</h4><p><strong>bgcolor 背景颜色</strong></p><ul><li>颜色名</li><li>rgb</li><li>十六进制</li></ul><p><strong>text 字体颜色</strong></p><ul><li>颜色名</li><li>rgb</li><li>十六进制</li></ul><h4 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h4><p><strong>h1-h6</strong> 从大到小<br>⚠️ 不建议在页面中写多个h1标签，h1标签可以被搜索引擎获取到，如有多个，可能进入搜索引擎黑名单</p><pre><code>&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h5&gt;&lt;/h5&gt;&lt;h6&gt;&lt;/h6&gt;</code></pre><h4 id="水平线标签"><a href="#水平线标签" class="headerlink" title="水平线标签"></a>水平线标签</h4><p><strong>hr</strong></p><pre><code>&lt;hr/&gt;</code></pre><ul><li>width 宽度 百分比 px</li><li>align 对齐方式 left right center（默认）</li><li>size 粗细</li></ul><h4 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h4><p><strong>p</strong></p><pre><code>&lt;p&gt;&lt;/p&gt;</code></pre><ul><li>align 对齐方式<br>left 左对齐<br>right 右对齐<br>center 中<br>justify 两端对齐</li></ul><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p><strong>无序列表</strong></p><ul><li>格式<pre><code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;</code></pre></li><li>常用属性<br>type 列表的图标<br>  square 实心方块<br>  circle 空心圆<br>  disc 实心圆</li></ul><p><strong>有序列表</strong></p><ul><li>格式<pre><code>&lt;ol&gt;&lt;li&gt;&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;</code></pre></li><li>常用属性<br>type 列表的图标<br>1 数字序号<br>a 小写字母<br>A 大写字母<br>i 小写罗马字母<br>I 大写罗马字母</li></ul><h4 id="div"><a href="#div" class="headerlink" title="div"></a>div</h4><h4 id="span"><a href="#span" class="headerlink" title="span"></a>span</h4><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈希表类刷题day8</title>
      <link href="/posts/nulishuaitiba.html"/>
      <url>/posts/nulishuaitiba.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div class="note info">前言：努力刷题day8</div>&lt;</p><h3 id="LeetCode-1-两数之和传送门"><a href="#LeetCode-1-两数之和传送门" class="headerlink" title="LeetCode 1. 两数之和传送门"></a>LeetCode 1. 两数之和<a href="https://leetcode-cn.com/problems/two-sum/">传送门</a></h3><pre><code>class Solution &amp;#123;    public int[] twoSum(int[] nums, int target) &amp;#123;        int[] res = new int[2];    if(nums == null || nums.length == 0)&amp;#123;        return res;    &amp;#125;    Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();    for(int i = 0; i &lt; nums.length; i++)&amp;#123;        int temp = target - nums[i];        if(map.containsKey(temp))&amp;#123;            res[1] = i;            res[0] = map.get(temp);        &amp;#125;        map.put(nums[i], i);    &amp;#125;    return res;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python作业汇总</title>
      <link href="/posts/zuoye2.html"/>
      <url>/posts/zuoye2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="table-container"><table><thead><tr><th>题目</th><th>链接</th></tr></thead><tbody><tr><td>python1</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/100621739">https://blog.csdn.net/qq_41233643/article/details/100621739</a></td></tr><tr><td>python2</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/101698919">https://blog.csdn.net/qq_41233643/article/details/101698919</a></td></tr><tr><td>python3</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/102614250">https://blog.csdn.net/qq_41233643/article/details/102614250</a></td></tr><tr><td>python5</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/102617398">https://blog.csdn.net/qq_41233643/article/details/102617398</a></td></tr><tr><td>python4</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/102617409">https://blog.csdn.net/qq_41233643/article/details/102617409</a></td></tr><tr><td>python6</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/102732760">https://blog.csdn.net/qq_41233643/article/details/102732760</a></td></tr><tr><td>python7</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/103104930">https://blog.csdn.net/qq_41233643/article/details/103104930</a></td></tr></tbody></table></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《城南旧事》</title>
      <link href="/posts/suibi2.html"/>
      <url>/posts/suibi2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="ipage">    <div class="ititle"></div>    <div class="izhengwen">  <br><code>壹 背景</code><p>《城南旧事》是林海音的半自传小说，以英子7岁到13岁的视角通过几个小故事描绘当时的北京胡同的人与事。<br><code>贰 故事</code></p><p>惠安馆<br>北京胡同，胡同中有个惠安馆，惠安馆里有个“疯女人”秀贞，秀贞是因为丈夫说“会回来的”却“没再回来”，后又生了孩子，孩子却被家人扔了。她疯了，被胡同的大人“指指点点”。英子是一个大胆的姑娘，她和秀贞成为了好朋友，英子开始帮助秀贞寻找她的孩子。英子还有个朋友叫妞儿，妞儿一直在学唱戏，因为她的父母让她赚钱，妞儿的父母不是亲生的。后来英子发现妞儿有着秀贞描述的胎记，妞儿就是秀贞的孩子。一个雨天，英子带着妞儿去找秀贞，让她们去找秀贞的丈夫，妞儿的父亲，并把母亲的镯子给她们作为盘缠，目送她们上车了。送走秀贞二人后，英子发烧晕倒了，之后的英子生了一场大病，醒来后没人再提妞儿和秀贞，但英子看见了母亲的镯子，还总是听说胡同里的大人说疯子和妞怎么怎么样了……后来……英子搬家了。</p><p>我们看海去<br>搬家后的英子上小学了，新家对面是一个废弃的院子，传说闹鬼，英子因为想向附近的伙伴证明自己，去帮他们去捡球，进了废弃的院子，并没找到球，却发现了一个倒扣的盆，这里是小偷存储赃物的地方。英子对这个地方充满了好奇，再一次去的时候，发现了一个男人，男人不让英子和别人说见过他，男人和英子也成为了好朋友，男人给英子讲述自己的弟弟，说他的弟弟是第一名，很厉害。日子过着，胡同里面出现小偷了，又是一次去院子，出来的时候英子拿了个铜佛，一个陌生人问他哪里来的，英子指向了院子。后来，小偷被抓到了，是那个男人，并听到大家说破了这案子是靠一个孩子。男人偷窃是为了自己的弟弟，可是他被抓了，那个站在领奖台上的弟弟怎么办……</p><p>兰姨娘<br>兰姨娘曾经做过妓女，后来做了英子父亲的朋友的小妾，但兰姨娘因为受不了老头子，投奔英子家。英子的父亲是个热心肠的人，除此之外还收留了激进派的朋友德先叔。家里多出来个兰姨娘，英子本来是开心的，但是偶然英子看到了兰姨娘和爸爸一起躺在榻子上，英子不这样想了。英子为了维护一直在生育的母亲，开始撮合兰姨娘和德先树叔，后来二人在一起了。一个小孩子成功避免了一场家庭风波……</p><p>驴打滚<br>英子有个奶娘叫宋妈，宋妈有个儿子，和英子年龄相仿，后来还生了个女儿，为了赚钱就来英子家当奶娘，由于英子母亲一直在生孩子宋妈在英子家待了好多年都没有回家，每年宋妈的丈夫都会来取工钱和给孩子做的衣服什么的。又一年，宋妈家乡的人来办事，见了宋妈都话里话外的劝她回家看看，宋妈回去发现女儿被送人了。儿子淹死了，宋妈回来就带着英子去找女儿送人的人家，没找到，每日像丢了魂儿一样。英子母亲劝宋妈回家再生个孩子，生了再来。也不知道宋妈有没有来……</p><p>爸爸的花儿落了<br>爸爸的花儿落了，我也不再是小孩子。英子的爸爸生病了，肺癌。英子毕业了，在毕业典礼上，像那个小偷哥哥的弟弟一样作为第一名代表领取小学毕业证，但爸爸并不在台下，爸爸生病了。她第一时间跑回家给爸爸看，可是爸爸不在家，爸爸的夹竹桃已经凌乱了。厨师老高让英子赶紧去医院看看爸爸，爸爸很虚弱，后来爸爸去世了……<br><code> 总结</code></p><p>“长亭外,古道边,芳草碧连天。晚风拂柳笛声残,夕阳山外山……“<br>知道这本书，影视化了，一直没看过电影，但读完这本书的时候，好像满脑子都是北京南城胡同中英子的身影，很忧伤，这本书的故事也许就像人生，世界不是非黑即白，我们都需要面对离别，失去和死亡。<br>故事讲完了，英子的童年也结束了……但她让心里的童年留了下来。<br>最后放一句书中我喜欢的一句话：<br>“我将来要写一本书，我要把天和海分清楚，我要把好人和坏人分清楚，我要把疯子和贼子分清楚，但是我现在却是什么也分不清。”<br>当时读到这里，我觉得我现在什么也分不清……<br>  </p></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈希表类刷题day7</title>
      <link href="/posts/nulishuaitiqi.html"/>
      <url>/posts/nulishuaitiqi.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div class="note info">前言：努力刷题day7</div>&lt;</p><h3 id="LeetCode-202-快乐数传送门"><a href="#LeetCode-202-快乐数传送门" class="headerlink" title="LeetCode 202. 快乐数传送门"></a>LeetCode 202. 快乐数<a href="https://leetcode-cn.com/problems/happy-number/">传送门</a></h3><pre><code>class Solution &amp;#123;    public boolean isHappy(int n) &amp;#123;        Set&lt;Integer&gt; record = new HashSet&lt;&gt;();        while (n != 1 &amp;&amp; !record.contains(n)) &amp;#123;            record.add(n);            n = getNextNumber(n);        &amp;#125;        return n == 1;    &amp;#125;    private int getNextNumber(int n) &amp;#123;        int res = 0;        while (n &gt; 0) &amp;#123;            int temp = n % 10;            res += temp * temp;            n = n / 10;        &amp;#125;        return res;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> br&gt;- leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序设计方法学汇总</title>
      <link href="/posts/zuoye1.html"/>
      <url>/posts/zuoye1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="table-container"><table><thead><tr><th>题目</th><th>链接地址</th><th>备注</th></tr></thead><tbody><tr><td>最大公约数几种算法分析</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/88369518?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/88369518?spm=1001.2014.3001.5501</a></td><td></td></tr><tr><td>求多个数的最大公约数，最小公倍数以及hanks son问题</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/88747890?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/88747890?spm=1001.2014.3001.5501</a></td><td></td></tr><tr><td>图灵机UN+1</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/88752561?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/88752561?spm=1001.2014.3001.5501</a></td><td></td></tr><tr><td>单词小助手</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/89044033?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/89044033?spm=1001.2014.3001.5501</a></td><td></td></tr><tr><td>KFC点餐系统</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/90133789?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/90133789?spm=1001.2014.3001.5501</a></td><td></td></tr><tr><td>CORBA组建化编程</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/90313985?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/90313985?spm=1001.2014.3001.5501</a></td><td></td></tr><tr><td>十进制数n转成b进制和2的幂次方表示</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/90724798?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/90724798?spm=1001.2014.3001.5501</a></td><td></td></tr><tr><td>数鸭子和角谷定理</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/90724745?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/90724745?spm=1001.2014.3001.5501</a></td><td></td></tr><tr><td>“三天打鱼两天晒网”从文件读入数据输出到文件结果的C程序</td><td><a href="https://blog.csdn.net/qq_41233643/article/details/88070527?spm=1001.2014.3001.5501">https://blog.csdn.net/qq_41233643/article/details/88070527?spm=1001.2014.3001.5501</a></td></tr></tbody></table></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序设计方法学,作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈希表类刷题day6</title>
      <link href="/posts/798a.html"/>
      <url>/posts/798a.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div class="note info">前言：努力刷题day6</div><br></p><h3 id="LeetCode-349-两个数组的交集传送门"><a href="#LeetCode-349-两个数组的交集传送门" class="headerlink" title="LeetCode 349.  两个数组的交集传送门"></a>LeetCode 349.  两个数组的交集<a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">传送门</a></h3><pre><code>import java.util.HashSet;import java.util.Set;class Solution &amp;#123;    public int[] intersection(int[] nums1, int[] nums2) &amp;#123;        if (nums1 == null || nums1.length == 0 || nums2 == null || nums2.length == 0) &amp;#123;            return new int[0];        &amp;#125;        Set&lt;Integer&gt; set1 = new HashSet&lt;&gt;();        Set&lt;Integer&gt; resSet = new HashSet&lt;&gt;();        //遍历数组1        for (int i : nums1) &amp;#123;            set1.add(i);        &amp;#125;        //遍历数组2的过程中判断哈希表中是否存在该元素        for (int i : nums2) &amp;#123;            if (set1.contains(i)) &amp;#123;                resSet.add(i);            &amp;#125;        &amp;#125;        int[] resArr = new int[resSet.size()];        int index = 0;        //将结果几何转为数组        for (int i : resSet) &amp;#123;            resArr[index++] = i;        &amp;#125;        return resArr;    &amp;#125;&amp;#125;</code></pre><h3 id="LeetCode-242-有效的字母异位词-传送门"><a href="#LeetCode-242-有效的字母异位词-传送门" class="headerlink" title="LeetCode 242.有效的字母异位词 传送门"></a>LeetCode 242.有效的字母异位词 <a href="https://leetcode-cn.com/problems/valid-anagram/">传送门</a></h3><pre><code>class Solution &amp;#123;    public boolean isAnagram(String s, String t) &amp;#123;        if (s.length() != t.length()) &amp;#123;            return false;        &amp;#125;        int[] table = new int[26];        for (int i = 0; i &lt; s.length(); i++) &amp;#123;            table[s.charAt(i) - &#39;a&#39;]++;        &amp;#125;        for (int i = 0; i &lt; t.length(); i++) &amp;#123;            table[t.charAt(i) - &#39;a&#39;]--;            if (table[t.charAt(i) - &#39;a&#39;] &lt; 0) &amp;#123;                return false;            &amp;#125;        &amp;#125;        return true;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那年杏花微雨</title>
      <link href="/posts/suibi1.html"/>
      <url>/posts/suibi1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id><a href="#" class="headerlink" title=" "></a> </h4><div class="ipage">    <div class="ititle">- 前言</div>  <div class="izhengwen">  <p><br>  堆枕乌云堕翠翘。午梦惊回，满眼春娇。<br>  <code>嬛嬛一袅楚宫腰。</code>那更春来，玉减香消。<br>  柳下朱门傍小桥。几度红窗，误认鸣镳。<br>  断肠风月可怜宵。忍使恹恹，两处无聊。<br>  </p>  <p>说来也奇怪，《甄嬛传》这部剧火了10年，我一直没有看。前段时间大家都在寻找‘没看过《甄嬛传》眼睛’，我当时还在想，我还是不想看，哎。但由于被封在家里，一动不动，就点开了甄嬛，大概看了一周，昨天看完了，这部剧并没有让我有想探究后续剧情的欲望，许是在平时接触过一些短视频，对剧情略知一二。</p>  <p>我内心对历史上的雍正评价很高，但这部剧里的雍正，着实让我喜欢不起来。看到他死的时候，我：终于死了，烦死我了……那就随便写写我的看法，这部剧从始到终都在提纯元皇后，我就在想，纯元皇后如果活着，雍正会一直这么爱她吗？我想：不会。还是这个从未露过面的纯元皇后，起初我一直以为纯元是雍正的第一个老婆，但往后看才知道宜修比纯元先嫁给雍正，并且雍正答应宜修，只要生出世子，就立她为正福晋。可雍正根本没实现诺言。看到这里，我被剧中的雍正气到了。  </p>  <p>在说回来，我很气雍正，但并不会为宜修打抱不平，宜修心肠太狠。毒害自己的姐姐，后宫的孩子都是死在她的手里，对这个角色，总结应该是：狠、恨、爱。“你以为姐姐有多爱你吗”</p>  <p>未完待续</p>  </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影视剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表类刷题day5</title>
      <link href="/posts/nulishuatiday5.html"/>
      <url>/posts/nulishuatiday5.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div class="note info">前言：努力刷题day5</div><br></p><h3 id="1-LeetCode-19-删除链表的倒数第-N-个结点-传送门"><a href="#1-LeetCode-19-删除链表的倒数第-N-个结点-传送门" class="headerlink" title="1.LeetCode 19. 删除链表的倒数第 N 个结点 传送门"></a>1.LeetCode 19. 删除链表的倒数第 N 个结点 <a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">传送门</a></h3><pre><code>class Solution &amp;#123;    public ListNode removeNthFromEnd(ListNode head, int n) &amp;#123;        ListNode dummyHead=new ListNode(-1);         dummyHead.next=head;        ListNode fast=dummyHead;        ListNode slow=dummyHead;        while(n-- &gt;0)        &amp;#123;            fast=fast.next;        &amp;#125;        fast=fast.next;        while(fast!=null)        &amp;#123;            fast=fast.next;            slow=slow.next;        &amp;#125;        slow.next=slow.next.next;        return dummyHead.next;    &amp;#125;&amp;#125;</code></pre><h3 id="2-LeetCode-面试题-02-07-链表相交-传送门"><a href="#2-LeetCode-面试题-02-07-链表相交-传送门" class="headerlink" title="2.LeetCode 面试题 02.07. 链表相交 传送门"></a>2.LeetCode 面试题 02.07. 链表相交 <a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists-lcci/">传送门</a></h3><pre><code>public class Solution &amp;#123;    public ListNode getIntersectionNode(ListNode headA, ListNode headB) &amp;#123;        ListNode curA = headA;        ListNode curB = headB;        int lenA = 0, lenB = 0;        while (curA != null) &amp;#123; // 求链表A的长度            lenA++;            curA = curA.next;        &amp;#125;        while (curB != null) &amp;#123; // 求链表B的长度            lenB++;            curB = curB.next;        &amp;#125;        curA = headA;        curB = headB;        // 让curA为最长链表的头，lenA为其长度        if (lenB &gt; lenA) &amp;#123;            //1. swap (lenA, lenB);            int tmpLen = lenA;            lenA = lenB;            lenB = tmpLen;            //2. swap (curA, curB);            ListNode tmpNode = curA;            curA = curB;            curB = tmpNode;        &amp;#125;        // 求长度差        int gap = lenA - lenB;        // 让curA和curB在同一起点上（末尾位置对齐）        while (gap-- &gt; 0) &amp;#123;            curA = curA.next;        &amp;#125;        // 遍历curA 和 curB，遇到相同则直接返回        while (curA != null) &amp;#123;            if (curA == curB) &amp;#123;                return curA;            &amp;#125;            curA = curA.next;            curB = curB.next;        &amp;#125;        return null;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表类刷题day4</title>
      <link href="/posts/nulishuatiday4.html"/>
      <url>/posts/nulishuatiday4.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">努力刷题day4</div><h3 id="1-LeetCode-206-反转链表-传送门"><a href="#1-LeetCode-206-反转链表-传送门" class="headerlink" title="1.LeetCode 206.反转链表 传送门"></a>1.LeetCode 206.反转链表 <a href="https://leetcode-cn.com/problems/reverse-linked-list/">传送门</a></h3><pre><code>// 双指针class Solution &amp;#123;    public ListNode reverseList(ListNode head) &amp;#123;        ListNode prev = null;        ListNode cur = head;        ListNode temp = null;        while (cur != null) &amp;#123;            temp = cur.next;// 保存下一个节点            cur.next = prev;            prev = cur;            cur = temp;        &amp;#125;        return prev;    &amp;#125;&amp;#125;</code></pre><h3 id="2-LeetCode-24-两两交换链表中的节点-传送门"><a href="#2-LeetCode-24-两两交换链表中的节点-传送门" class="headerlink" title="2.LeetCode 24.两两交换链表中的节点 传送门"></a>2.LeetCode 24.两两交换链表中的节点 <a href="https://leetcode-cn.com/problems/swap-nodes-in-pairs/">传送门</a></h3><pre><code>// 递归class Solution &amp;#123;    public ListNode swapPairs(ListNode head) &amp;#123;        if (head == null || head.next == null) &amp;#123;            return head;        &amp;#125;        ListNode newHead = head.next;        head.next = swapPairs(newHead.next);        newHead.next = head;        return newHead;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表类刷题day3</title>
      <link href="/posts/nulishuatiday3.html"/>
      <url>/posts/nulishuatiday3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">努力刷题day3</div><h3 id="1-LeetCode-203-移除链表元素-传送门"><a href="#1-LeetCode-203-移除链表元素-传送门" class="headerlink" title="1.LeetCode 203.移除链表元素 传送门"></a>1.LeetCode 203.移除链表元素 <a href="https://leetcode-cn.com/problems/remove-linked-list-elements/">传送门</a></h3><pre><code>class Solution &amp;#123;    public ListNode removeElements(ListNode head, int val) &amp;#123;        //删除值相同的头结点后，可能新的头结点也值相等，用循环解决        while(head!=null&amp;&amp;head.val==val)&amp;#123;            head=head.next;        &amp;#125;        if(head==null)            return head;        ListNode prev=head;        //确保当前结点后还有结点        while(prev.next!=null)&amp;#123;            if(prev.next.val==val)&amp;#123;                prev.next=prev.next.next;            &amp;#125;else&amp;#123;                prev=prev.next;            &amp;#125;        &amp;#125;        return head;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组类刷题day2</title>
      <link href="/posts/nulishuatiday2.html"/>
      <url>/posts/nulishuatiday2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">努力刷题day2</div><h3 id="LeetCode-977-有序数组的平方-传送门"><a href="#LeetCode-977-有序数组的平方-传送门" class="headerlink" title="LeetCode 977.有序数组的平方 传送门"></a>LeetCode 977.有序数组的平方 <a href="https://leetcode-cn.com/problems/squares-of-a-sorted-array/">传送门</a></h3><p>:::default<br>code<br>:::</p><pre><code>class Solution &amp;#123;    public int[] sortedSquares(int[] nums) &amp;#123;        for(int i=0;i&lt;nums.length;i++)        &amp;#123;            nums[i]=nums[i]*nums[i];        &amp;#125;        Arrays.sort(nums);        return nums;    &amp;#125;&amp;#125;</code></pre><h3 id="LeetCode-209-长度最小的子数组传送门"><a href="#LeetCode-209-长度最小的子数组传送门" class="headerlink" title="LeetCode 209.长度最小的子数组传送门"></a>LeetCode 209.长度最小的子数组<a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">传送门</a></h3><p>:::default<br>code<br>:::</p><pre><code>class Solution &amp;#123;    public int minSubArrayLen(int s, int[] nums) &amp;#123;        int n = nums.length;        if (n == 0) &amp;#123;            return 0;        &amp;#125;        int ans = Integer.MAX_VALUE;        for (int i = 0; i &lt; n; i++) &amp;#123;            int sum = 0;            for (int j = i; j &lt; n; j++) &amp;#123;                sum += nums[j];                if (sum &gt;= s) &amp;#123;                    ans = Math.min(ans, j - i + 1);                    break;                &amp;#125;            &amp;#125;        &amp;#125;        return ans == Integer.MAX_VALUE ? 0 : ans;    &amp;#125;&amp;#125;</code></pre><div class="spoiler collapsed">    <div class="spoiler-title">        code    </div>    <div class="spoiler-content">        <p>（1） Arrays.sort()使用方法：<a href="https://blog.csdn.net/qq_41763225/article/details/82890122/">传送门-转载-侵删致谢</a><br>（2）Integer.MAX_VALUE的含义：<a href="https://blog.csdn.net/weixin_44824500/article/details/104768290">传送门-转载-侵删致谢</a></p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔试面试总结（关于测试</title>
      <link href="/posts/bimian1.html"/>
      <url>/posts/bimian1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">找到工作了，一直想写一份面经汇总，奈何拖延症晚期，先开个坑，早晚得填！！！</div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组类刷题day1</title>
      <link href="/posts/nulishuatiday1.html"/>
      <url>/posts/nulishuatiday1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">努力刷题day1  嘻嘻                                                       </div><h3 id="LeetCode-704-二分查找【传送门】"><a href="#LeetCode-704-二分查找【传送门】" class="headerlink" title="LeetCode 704.二分查找【传送门】"></a>LeetCode 704.二分查找【<a href="https://leetcode-cn.com/problems/binary-search/">传送门</a>】</h3><pre><code>class Solution &amp;#123;    public int search(int[] nums, int target) &amp;#123;        // 避免当 target 小于nums[0] nums[nums.length - 1]时多次循环运算        if (target &lt; nums[0] || target &gt; nums[nums.length - 1]) &amp;#123;            return -1;        &amp;#125;        int left = 0, right = nums.length - 1;        while (left &lt;= right) &amp;#123;            int mid = left + ((right - left) &gt;&gt; 1);            if (nums[mid] == target)                return mid;            else if (nums[mid] &lt; target)                left = mid + 1;            else if (nums[mid] &gt; target)                right = mid - 1;        &amp;#125;        return -1;    &amp;#125;&amp;#125;</code></pre><h3 id="LeetCode-27-移除元素【传送门】"><a href="#LeetCode-27-移除元素【传送门】" class="headerlink" title="LeetCode 27.移除元素【传送门】"></a>LeetCode 27.移除元素【<a href="https://leetcode-cn.com/problems/remove-element/">传送门</a>】</h3><pre><code>class Solution &amp;#123;    public int removeElement(int[] nums, int val) &amp;#123;        // 快慢指针        int fastIndex = 0;        int slowIndex;        for (slowIndex = 0; fastIndex &lt; nums.length; fastIndex++) &amp;#123;            if (nums[fastIndex] != val) &amp;#123;                nums[slowIndex] = nums[fastIndex];                slowIndex++;            &amp;#125;        &amp;#125;        return slowIndex;    &amp;#125;&amp;#125;</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建图床</title>
      <link href="/posts/e5f3.html"/>
      <url>/posts/e5f3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">最近搭建好Hexo博客，昨天开始迁移博客的时候，思考图片存储问题。于是，开始搜索，看到大家都是用一个云+Picgo+Typora搭建了一个图床。前几天在找Markdown编辑器的时候，最初的想法也是用Typora，但是奈何官网进不去，遂转入MWeb。</div><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="阿里云OSS"><a href="#阿里云OSS" class="headerlink" title="阿里云OSS"></a>阿里云OSS</h2><p>1.链接：<a href="https://www.aliyun.com/product/oss">https://www.aliyun.com/product/oss</a><br>2.开通：一年9块钱<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111410220.png" alt><br>3.创建Bucket列表<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111414857.png" alt><br>4.生成 Access Key和AccessKey Secret<br>（在下图右下角常见入口，左侧第二个）<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111415577.png" alt></p><h2 id="Picgo"><a href="#Picgo" class="headerlink" title="Picgo"></a>Picgo</h2><p>1.下载：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a><br>按照作者的教程来就行，需要注意的就是Mac会提示风险app，在安全里允许一下就好了<br>2.配置：如图<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111444858.png" alt><br>值得说的是，我在上传图片的时候报403，说说解决办法，首先在PicGO设置里看起服务，确保自己配置信息没有写错。<br>上传失败一定在PicGo中看看日志文件。</p><h2 id="Mweb"><a href="#Mweb" class="headerlink" title="Mweb"></a>Mweb</h2><p>1.下载：APP Store<br>2.配置<br>(1)在这里选择偏好设置—-&gt;<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111425766.png" alt><br>(2)按照下图点击—-&gt;<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111431149.png" alt><br>(3)填写配置信息<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111435044.png" alt><br>（4）填写好后点击确定，发布服务。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>上述完成后就可以使用了，有图片就上传到PicGo，然后复制图片代码，在写博客的时候粘贴即可。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长春径点科技有限公司-软件测试 面试</title>
      <link href="/posts/be61.html"/>
      <url>/posts/be61.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>第一次正式面试，我很蠢。</p></blockquote><h3 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h3><p>1.你先进行一下自我介绍吧！</p><p>2.你理解 ip 么？</p><p>3.你用过微信传输助手吗？如果你进行测试测试点怎么考虑？</p><p>4.你了解虚拟机吗？</p><p>5.用过 sql server 么？还记得查询语句么？</p><p>6.你理解测试流程么？你对迭代测试的理解？集成测试的理解？</p><p>7.你自学过什么技术么？</p><p>8.你之前做过前端岗位，为什么想做测试？</p><p>9.薪资问题。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ValueError:not enough values to unpack (expected 3, got 0)</title>
      <link href="/posts/3f60.html"/>
      <url>/posts/3f60.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>侵删致谢</p></blockquote><p>运行github上的大佬的代码：<a href="https://github.com/YunYang1994/tensorflow-yolov3">https://github.com/YunYang1994/tensorflow-yolov3</a>，在进行python train.py的时候:ValueError: not enough values to unpack (expected 3, got 0),github中部分解决方法<a href="https://github.com/YunYang1994/tensorflow-yolov3/issues/396">https://github.com/YunYang1994/tensorflow-yolov3/issues/396</a>，但尝试后都没有成功运行，后来发现只是因为路径包含中文。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip安装更新问题</title>
      <link href="/posts/6074.html"/>
      <url>/posts/6074.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>侵删致谢</p></blockquote><h3 id="pip-问题"><a href="#pip-问题" class="headerlink" title="pip 问题"></a>pip 问题</h3><p>安装或更新都会出现一下问题：<br>```ERROR: Exception:<br>Traceback (most recent call last):</p><pre><code>解决办法就是找个镜像：推荐（XXX是需要安装的）```pip install XXX -i http://pypi.douban.com/simple --trusted-host pypi.douban.com</code></pre><h3 id="使用oenpyxl的问题"><a href="#使用oenpyxl的问题" class="headerlink" title="使用oenpyxl的问题"></a>使用oenpyxl的问题</h3><p>1、如下：</p><p>```TypeError: got invalid input value of type <class 'xml.etree.elementtree.element'>, expected string </class></p><pre><code>openpyxl版本问题，我把本身自带的版本3.0.2卸载，安装了3.0.0后就不再出现次错误。安装3.0.0```pip install openpyxl==3.0.0 -i http://pypi.douban.com/simple --trusted-host pypi.douban.com</code></pre><p><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201191016019.png" alt></p><p>卸载3.0.2<br><code>pip uninstall openpyxl</code><br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201191017522.png" alt></p><p>补充：网上有教程是包冲突，我卸载了lxml，还是会报错，不过大家可以尝试一下。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英文文献搜索总结</title>
      <link href="/posts/e5f3.html"/>
      <url>/posts/e5f3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> <a href="https://gfsoso.99lb.net/sci-hub.html">https://gfsoso.99lb.net/sci-hub.html</a></p><p> <a href="https://sci-hub.shop/">https://sci-hub.shop/</a></p><p> <a href="https://panda321.com/">https://panda321.com/</a></p><p>endnote出现大括号问题：</p><p><a href="https://wenku.baidu.com/view/86761e381cb91a37f111f18583d049649b660ed9.html">https://wenku.baidu.com/view/86761e381cb91a37f111f18583d049649b660ed9.html</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eclipse闪退以及出现等待的进度条</title>
      <link href="/posts/bug6.html"/>
      <url>/posts/bug6.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="闪退（快把我气死了）"><a href="#闪退（快把我气死了）" class="headerlink" title="闪退（快把我气死了）"></a>闪退（快把我气死了）</h3><p>大家总结了很多经验，我一个一个试了一遍，最后只有一条可以用：</p><p>把jdk下的jre目录直接复制到Eclipse文件夹下。</p><h3 id="当无论你建个什么或者运行，都出现等待的进度条："><a href="#当无论你建个什么或者运行，都出现等待的进度条：" class="headerlink" title="当无论你建个什么或者运行，都出现等待的进度条："></a>当无论你建个什么或者运行，都出现等待的进度条：</h3><p>不要犹豫，卸了重装吧，我看了大家的经验一个一个试了一遍，一个都没用，我哭了</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有限自动机DFA</title>
      <link href="/posts/dfa.html"/>
      <url>/posts/dfa.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>M=(K, S, f,S0,Z )称为一个确定的有限自动机 (DFA: Deterministic Finite Automata)<br>(1) 有限个状态之集,记作K;</p><p>(2) 有限个输入符号组成的字母表,记作S;</p><p>(3) 从K´S到K的转换函数 f: K´S®K. f(p,a)=q表示若当前状态为p,且输入符号为a,则进入下一个状态为q;</p><p>(4) S0ÎK,初始(开始)状态;</p><p>(5) 若干个终态之集: Z( ÍK )</p><p>由此可见,一DFA实际上是状态转换图的形式描述(数学定义),状态转换图是DFA的几何(图形)表示.</p><p>确定的有限自动机：在状态转换的每一步，根据FA当前的状态及扫描的输入字符，便能唯一地确定FA的下一状态。在转换图上看，若|S|=n，则任何结点所引出的矢线至多有n条，且矢线上的标记均不同。<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231254003.png" alt></p><p>非确定的有限自动机：在U状态下，输入符号为a时，FA的下一状态不唯一，而是在状态集{A,B,C,…,X}中任选其一。具有这种性质的FA称为非确定的NFA<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231255409.png" alt></p><p>对于任意一个不确定有限自动机都有一个确定的有限自动机与其相对应，且等价。</p><p>=============================================================================</p><p>NFA转DFA目前有些没理清楚，理清再写吧！o(╥﹏╥)o</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>citespace使用方法/经验总结</title>
      <link href="/posts/ec7a.html"/>
      <url>/posts/ec7a.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-citespace初学者使用："><a href="#1-citespace初学者使用：" class="headerlink" title="1. citespace初学者使用："></a>1. citespace初学者使用：</h3><p><a href="https://wenku.baidu.com/view/4da3fd1a6294dd88d1d26b64.html%20%20%20%20%20">https://wenku.baidu.com/view/4da3fd1a6294dd88d1d26b64.html     </a><br><a href="https://www.jianshu.com/p/49d41d0ccd7fhttps://www.jianshu.com/p/49d41d0ccd7f%20%20%20%20">https://www.jianshu.com/p/49d41d0ccd7fhttps://www.jianshu.com/p/49d41d0ccd7f    </a>   </p><h3 id="2-有一个公众号“学术点滴”，感谢大佬"><a href="#2-有一个公众号“学术点滴”，感谢大佬" class="headerlink" title="2. 有一个公众号“学术点滴”，感谢大佬"></a>2. 有一个公众号“学术点滴”，感谢大佬</h3><h3 id="3-解决关键词聚类标签显示省略号问题："><a href="#3-解决关键词聚类标签显示省略号问题：" class="headerlink" title="3. 解决关键词聚类标签显示省略号问题："></a>3. 解决关键词聚类标签显示省略号问题：</h3><p><a href="http://blog.sciencenet.cn/blog-3195540-1053515.html">http://blog.sciencenet.cn/blog-3195540-1053515.html</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24点游戏 python</title>
      <link href="/posts/620e.html"/>
      <url>/posts/620e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>常见游戏规则：<br>从扑克中每次取出4张牌。使用加减乘除，第一个能得出24者为赢。（其中，J代表&gt;11，Q代表12，K代表13，A代表1），按照要求编程解决24点游戏。</p></blockquote><p>随机产生四个数字用python中的函数进行全排列<br>随机数的生成：<br>对于python随机数的生成，通过导入包来实现，即import  random<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222143990.png" alt><br>本程序中因为要生成4个（1——13）的整形数字，采用randint<br>对四个随机数的全排列：<br>对于python可以通过python的包itertools所以不用自己写递归函数实现</p><pre class="line-numbers language-lang-itertools.permutations"><code class="language-lang-itertools.permutations">```通俗地讲，就是返回可迭代对象的所有数学全排列方式。```listCardSet = list(set(itertools.permutations(listCardNum, 4)))#全排列4个数return  listCardSet<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>例如：8,13,3,5产生的全排列</p><p>(8, 13, 3, 5), (13, 5, 8, 3), (5, 3, 8, 13), (13, 3, 8, 5), (3, 5, 8, 13), (3, 13, 5, 8),</p><p> (3, 5, 13, 8), (5, 3, 13, 8), (8, 13, 5, 3), (8, 5, 13, 3), (8, 3, 5, 13), (5, 8, 3, 13),</p><p> (13, 8, 3, 5), (13, 3, 5, 8), (8, 3, 13, 5), (5, 8, 13, 3), (3, 8, 13, 5), (5, 13, 3, 8),</p><p> (13, 8, 5, 3), (5, 13, 8, 3), (8, 5, 3, 13), (3, 13, 8, 5), (3, 8, 5, 13), (13, 5, 3, 8)</p><p>显示：<br>```if <strong>name</strong> == “<strong>main</strong>“:<br>    print(“<strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong>欢迎进入24点游戏<strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong>“)<br>    print(“该系统会随机产生四张牌，并帮助您算出可以实现24点的所有算法”)</p><pre><code> ![](https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222146226.png)代码分析：I.需要的包：```import itertoolsimport random</code></pre><p>II.随机产生数字和全排列：</p><p>```def card_rand():<br>    for i in range(4):<br>        list_random.append(random.randint(1, 13))                    #list.append(obj)<br>    list_quanpai = list(set(itertools.permutations(list_random, 4)))#全排列4个数<br>    return  list_quanpai<br>listCard = card_rand()  # 排列组合结果</p><h1 id="print-listCard-输出所有排列"><a href="#print-listCard-输出所有排列" class="headerlink" title="print(listCard)#输出所有排列"></a>print(listCard)#输出所有排列</h1><p>```III. 计算函数：</p><p>```def card_calculate():<br>    for i in range(len(listCard)):<br>        list1_Card = listCard[i]</p><pre><code>    cardOne = list1_Card[0]    cardTwo = list1_Card[1]    cardThree = list1_Card[2]    cardFour = list1_Card[3]  # 得到四张牌的点数    flag = False  # 标志位    try:        for o1 in listOperator:            resultOne = 0  # 前两个数的运算结果            if o1 == &quot;+&quot;:                resultOne = cardOne+cardTwo            elif o1 == &quot;-&quot;:                resultOne = cardOne-cardTwo            elif o1 == &quot;*&quot;:                resultOne = cardOne*cardTwo            elif o1 == &quot;/&quot;:                resultOne = cardOne/cardTwo            for o2 in listOperator:                resultTwo = 0  # 前三个数的运算结果                if o2 == &quot;+&quot;:                    resultTwo = resultOne + cardThree                elif o2 == &quot;-&quot;:                    resultTwo = resultOne - cardThree                elif o2 == &quot;*&quot;:                    resultTwo = resultOne * cardThree                elif o2 == &quot;/&quot;:                    resultTwo = resultOne / cardThree                for o3 in listOperator:                    resultThree = 0  # 四个数的运算结果                    resultFinal = 0  # 最后两个数的运算结果                    if o3 == &quot;+&quot;:                        resultThree = resultTwo + cardFour                        resultFinal = cardThree + cardFour                    elif o3 == &quot;-&quot;:                        resultThree = resultTwo - cardFour                        resultFinal = cardThree - cardFour                    elif o3 == &quot;*&quot;:                        resultThree = resultTwo * cardFour                        resultFinal = cardThree * cardFour                    elif o3 == &quot;/&quot;:                        resultThree = resultTwo / cardFour                        resultFinal = cardThree / cardFour</code></pre><p>```<br>源码：<a href="https://download.csdn.net/download/qq_41233643/11112033">https://download.csdn.net/download/qq_41233643/11112033</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解释器提示如：SyntaxError:invalid character in identifier</title>
      <link href="/posts/bug4.html"/>
      <url>/posts/bug4.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>解释器提示如：SyntaxError: invalid character in identifier相信很多时候遇到这个Error会找不到问题出在哪里，此时就要看错误行是不是夹杂了中文空格字符等。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运行时报错：AttributeError:module &#39;urllib&#39; has no attribute &#39;urlopen&#39;</title>
      <link href="/posts/bug5.html"/>
      <url>/posts/bug5.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在Python3中如果写以下代码会出现报错，原因就是在Python3中应该把            import urllib=======》import urllib.request</p><p>把所有位置都换成带有.request，就可以解决错误了</p><pre><code>import urllibfrom bs4 import BeautifulSoupresponse = urllib.urlopen(&quot;http://www.imau.edu.cn&quot;)html = response.read()data = html.decode(&#39;utf-8&#39;)soup = BeautifulSoup(data)# print soup.findAll(&#39;span&#39;)</code></pre><p>response = urllib.urlopen(“<a href="http://www.imau.edu.cn">http://www.imau.edu.cn</a>“)<br>AttributeError: module ‘urllib’ has no attribute ‘urlopen’</p><p>例如这个例子改一下：两处改好就OK了</p><pre><code>import urllib.requestfrom bs4 import BeautifulSoupresponse = urllib.request.urlopen(&quot;http://www.imau.edu.cn&quot;)html = response.read()data = html.decode(&#39;utf-8&#39;)soup = BeautifulSoup(data)# print soup.findAll(&#39;span&#39;)</code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Online Judege 平台上出现的Presentation Error 错误</title>
      <link href="/posts/bug3.html"/>
      <url>/posts/bug3.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>相信很多人在各种OJ平台上提交自己在编译器已经成功的代码还是会出现Presentation Error错误，不过也不要不开心，这种错误也是可以确定的是你的思路正确，只是输出结果和标准输出结果有点小小的不一样，这种错误的原因：</p><p>可能是再输出结果后面少了或者多了没什么意义的空格。</p><p>所以要认真的检查一下输出结果</p><p>OJ对格式要求很严格</p><p>如果还是没找到问题，可以试试在你的输出结果后面加空格或换行符，因为标准输出后面可能有你看不见的空格或换行符</p><p>如果你成功解决了    为你撒花撒花撒花 ~~~</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取猫眼电影榜单Top100—利用requests、正则表达式</title>
      <link href="/posts/pachong2.html"/>
      <url>/posts/pachong2.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info">小菜鸟前言：好多东西还是实际操作一下，你会发现好多意想不到的错误，55555~~~~爬取猫眼电影榜单的博客好多好多，因为爬取猫眼电影榜单是个很基础的爬区，但是作为一个爬虫小白，也想记录一下：</div><p>爬取不外乎分为四个大的步骤：</p><p>发起请求：通过HTTP库向目标站点发起请求，即发送一个Requests，请求可以包含额外的headers等信息，等待服务器响应。<br>解析内容：得到的内容可能是HTML，可以用正则表达式、网页解析库进行解析，可以是Json，可以直接转化为Json，可能是二进制数据，可以做保存或进一步处理。<br>获取响应内容：如果服务器能正常响应，会得到一个Response，Response的内容便是所要获取的页面内容，类型可能是HTML，Json字符串等，二进制数据（图片视频）等。<br>保存数据：保存形式多样，可以存为文本，也可以保存至数据库或者保存特定格式的文件。</p><p>说了这么多乱七八糟的，言归正传，我们这次利用requests库和正则表达式来抓取相关内容</p><p>要开始啦：</p><h3 id="首先确定已经安装好了requests库"><a href="#首先确定已经安装好了requests库" class="headerlink" title="首先确定已经安装好了requests库"></a>首先确定已经安装好了requests库</h3><p>现在我们开始进行抓取前的分析：</p><p>我们需要抓取的目标站点是：<a href="https://maoyan.com/board/4，页面如下">https://maoyan.com/board/4，页面如下</a><br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231157450.png" alt><br>将网页滚动到最下方，可以发现这个不止一页，所以现在我们点击第二页，看URL和内容都进行了变化<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231157285.png" alt></p><p>可以发现此时页面的URL变为<a href="https://maoyan.com/board/4?offset=10，比之前的URL多了一个参数offset=10，目前显示11~20名的电影，再点击下一页，发现URL变成">https://maoyan.com/board/4?offset=10，比之前的URL多了一个参数offset=10，目前显示11~20名的电影，再点击下一页，发现URL变成</a> <a href="https://maoyan.com/board/4?offset=20，offset变成了20，目前显示21~30的电影。">https://maoyan.com/board/4?offset=20，offset变成了20，目前显示21~30的电影。</a></p><p>总结规律，offest代表偏移量值，如果偏移量（内存中存储数据的方式是：一个存储数据的“实际地址”=段首地址+偏移量）为n，则电影序号就是n+1~n+10，每页显示10 个。所以我们想要获取100个，需要分开10次请求，10次每次的offest参数分别设置为0、10、20、30、40、50、60、70、80、90。</p><h3 id="当当当当-抓取首页了"><a href="#当当当当-抓取首页了" class="headerlink" title="当当当当~抓取首页了"></a>当当当当~抓取首页了</h3><p>首先抓取第一页的内容，我们实现了get_one_page()方法，给他传入url参数，然后将抓取的页面结果返回，再通过main()方法调用。headers根据自己实际情况</p><pre><code>import requestsdef get_one_page(url):    headers = &amp;#123;        &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.170 Safari/537.36&#39;,    &amp;#125;    response = requests.get(url,headers=headers)    if response.status_code == 200:        return response.text    return Nonedef main():    url = &#39;https://maoyan.com/board/4&#39;    html = get_one_page(url)    print(html)main()</code></pre><p>下图为源码：一部分，哈哈哈哈哈<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231159349.png" alt></p><p>我们回到网页看源代码：我们可以看到一部电影的源代码是一个dd节点，我们用正则表达式来提取里面的一些电影信息。<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231200077.png" alt></p><p>首先提取排名信息。他的排名信息是在class为board-index的i节点内，这里利用非贪婪匹配来提取i节点内的信息，正则表达式写为：</p><pre><code>&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;</code></pre><p>接下来提取电影图片，可以看到后面有a节点，其内部有两个img节点。经过检查发现，第二个img节点的data-src属性是图片链接。这里提取第二个img节点的data-src属性，正则表达式可以写为</p><pre><code>&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;</code></pre><p>再往后需要提取电影的名称，他在后面的p节点内，class为name。所以，可以用name做一个标志位，然后进一步提取到其内a节点的正文内容，此时正则表达式改写如下：</p><pre><code>&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;.*?data-src=&quot;(.*?name.*?a.*?&gt;(.*?)&lt;/a&gt;</code></pre><p>在提取主演、发布时间/评分等，原理一样，正则表达式如下：</p><pre><code>&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;.*?name.*?a.*?&gt;(.*?)&lt;/a&gt;.*?star.*?&gt;(.*?)&lt;/p&gt;.*?releasetime.*?&gt;(&gt;*?)&lt;/p&gt;.*?integer.*?&gt;(.*?)&lt;/i&gt;.*?fraction.*?&gt;(.*?)&lt;/i&gt;.*?&lt;/dd&gt;</code></pre><p>这样一个正则表达式就可以匹配一个电影的结果，里面匹配了7个信息，通过调用findall()方法提取出所有内容。</p><p>代码如下：</p><pre><code>def parse_one_page(html):    pattern = re.compile(        &#39;&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;.*?name&quot;&gt;&lt;a&#39;        + &#39;.*?&gt;(.*?)&lt;/a&gt;.*?star&quot;&gt;(.*?)&lt;/p&gt;.*?releasetime&quot;&gt;(.*?)&lt;/p&gt;&#39;        + &#39;.*?integer&quot;&gt;(.*?)&lt;/i&gt;.*?fraction&quot;&gt;(.*?)&lt;/i&gt;.*?&lt;/dd&gt;&#39;,        re.S)    items = re.findall(pattern,html)    print(items)</code></pre><p>通过以上我们可以提取一页的10个电影信息，但是数据会很乱，我们需要再进行处理：</p><pre><code>def parse_one_page(html):    pattern = re.compile(&#39;&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;.*?name&quot;&gt;&lt;a&#39;                         + &#39;.*?&gt;(.*?)&lt;/a&gt;.*?star&quot;&gt;(.*?)&lt;/p&gt;.*?releasetime&quot;&gt;(.*?)&lt;/p&gt;&#39;                         + &#39;.*?integer&quot;&gt;(.*?)&lt;/i&gt;.*?fraction&quot;&gt;(.*?)&lt;/i&gt;.*?&lt;/dd&gt;&#39;, re.S)    items = re.findall(pattern, html)    for item in items:        yield &amp;#123;            &#39;index&#39;: item[0],            &#39;image&#39;: item[1],            &#39;title&#39;: item[2],            &#39;actor&#39;: item[3].strip()[3:],            &#39;time&#39;: item[4].strip()[5:],            &#39;score&#39;: item[5] + item[6]        &amp;#125;</code></pre><h3 id="接下来进行写入文件："><a href="#接下来进行写入文件：" class="headerlink" title="接下来进行写入文件："></a>接下来进行写入文件：</h3><p>我们在这里直接写入到一个文本文件。这里通过Json库的dumps()方法实现字典的序列化，并指定ensure_ascii参数为False，这样保证输出结果是中文形式而不是Unicode编码。代码：</p><pre><code>def write_to_file(content):    with open(&#39;result.txt&#39;, &#39;a&#39;, encoding=&#39;utf-8&#39;) as f:        f.write(json.dumps(content, ensure_ascii=False) + &#39;\n&#39;)</code></pre><p>通过write_to_file()即可将字典写入到文本文件。此处的content参数就是一个电影的提取结果，是一个字典。</p><p>整合代码啦<del>~</del>终于要结束了</p><p>最后用main() 函数调用前面的方法，将单页电影结果写入文件</p><p>代码：</p><pre><code>def main():    url = &#39;http://maoyan.com/board/4&#39;    html = get_one_page(url)    for item in parse_one_page(html):        write_to_file(item)</code></pre><p>但现在我们完成了10部电影的提取。我们需要top100的电影，所以还需要遍历一下，给链接传入offset参数，将其他90部电影爬取，要添加一下：</p><pre><code>if __name__ == &#39;__main__&#39;:    for i in range(10):        main(offset=i * 10)</code></pre><p>我们还需要把main()函数改一下，接受一个offest值作为偏移量，然后构造URL进行爬取。代码：</p><pre><code>def main(offset):    url = &#39;http://maoyan.com/board/4?offset=&#39; + str(offset)    html = get_one_page(url)    for item in parse_one_page(html):        print(item)        write_to_file(item)</code></pre><h3 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h3><pre><code>import jsonimport requestsfrom requests.exceptions import RequestExceptionimport reimport timedef get_one_page(url):    try:        headers = &amp;#123;            &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36&#39;        &amp;#125;        response = requests.get(url, headers=headers)        if response.status_code == 200:            return response.text        return None    except RequestException:        return Nonedef parse_one_page(html):    pattern = re.compile(&#39;&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;.*?name&quot;&gt;&lt;a&#39;                         + &#39;.*?&gt;(.*?)&lt;/a&gt;.*?star&quot;&gt;(.*?)&lt;/p&gt;.*?releasetime&quot;&gt;(.*?)&lt;/p&gt;&#39;                         + &#39;.*?integer&quot;&gt;(.*?)&lt;/i&gt;.*?fraction&quot;&gt;(.*?)&lt;/i&gt;.*?&lt;/dd&gt;&#39;, re.S)    items = re.findall(pattern, html)    for item in items:        yield &amp;#123;            &#39;index&#39;: item[0],            &#39;image&#39;: item[1],            &#39;title&#39;: item[2],            &#39;actor&#39;: item[3].strip()[3:],            &#39;time&#39;: item[4].strip()[5:],            &#39;score&#39;: item[5] + item[6]        &amp;#125;def write_to_file(content):    with open(&#39;result.txt&#39;, &#39;a&#39;, encoding=&#39;utf-8&#39;) as f:        f.write(json.dumps(content, ensure_ascii=False) + &#39;\n&#39;)def main(offset):    url = &#39;http://maoyan.com/board/4?offset=&#39; + str(offset)    html = get_one_page(url)    for item in parse_one_page(html):        print(item)        write_to_file(item)if __name__ == &#39;__main__&#39;:    for i in range(10):        main(offset=i * 10)        time.sleep(1)</code></pre><h3 id="延时等待"><a href="#延时等待" class="headerlink" title="延时等待"></a>延时等待</h3><p>猫眼已经增加了反爬虫~如果速度过快则无响应，所以最后加了一个延时等待</p><p>运行结果：（只截取一部分~~）<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231205110.png" alt></p><p>文本文件：（截取一部分）<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231205407.png" alt></p><p>So~~~此时此刻全部完成了</p><p>撒花撒花撒花<del>~</del>~</p><p>自己的一些看法总结，有错误请大神们指出。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫-- HTML/CSS/JS</title>
      <link href="/posts/pachong1.html"/>
      <url>/posts/pachong1.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​</p><div class="note info">作为想要学习python爬虫的小白，在最近学习爬虫的过程中发现，总是在学习过程中遇到不会的网页知识，因此，来写一些基础知识。至少要会读一些代码。</div><p><code><br>HTML 定义了网页的内容<br>CSS 描述了网页的布局<br>JavaScript 网页的行为</code></p><h3 id="HTML基本知识"><a href="#HTML基本知识" class="headerlink" title="HTML基本知识"></a>HTML基本知识</h3><p>(1) HTML 指的是超文本标记语言 (Hyper Text Markup Language)<br>(2) HTML 不是一种编程语言，而是一种标记语言 (markup language)<br>(3) 标记语言是一套标记标签 (markup tag)<br>(4)HTML 使用标记标签来描述网页</p><pre><code>&lt;html&gt;&lt;body&gt;&lt;h1&gt;My First Heading &lt;/h1&gt;&lt;p&gt;My First Body&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h4><pre><code>&lt;html&gt; 与 &lt;/html&gt; &lt;!-- 之间的文本描述网页 --&gt; &lt;body&gt; 与 &lt;/body&gt; &lt;!--之间的文本是可见的页面内容 --&gt;&lt;h1&gt; 与 &lt;/h1&gt; &lt;!--之间的文本被显示为标题 --&gt;&lt;p&gt; 与 &lt;/p&gt; &lt;!-- 之间的文本被显示为段 --&gt;</code></pre><h4 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h4><pre><code>HTML 标签是由尖括号包围的关键词，比如 &lt;html&gt;HTML 标签通常是成对出现的，比如 &lt;p&gt; 和 &lt;/p&gt;标签对中的第一个标签是开始标签，第二个标签是结束标签开始和结束标签也被称为开放标签和闭合标签</code></pre><h4 id="HTML编辑器"><a href="#HTML编辑器" class="headerlink" title="HTML编辑器"></a>HTML编辑器</h4><p>可以使用文本编辑器，例如NotePad++<br>写第一个HTML代码<br>首先打开NotePad++,写入代码，如下图：<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231028648.png" alt><br>然后保存，将后缀名改为html;<br>最后在浏览器中运行，双击已经保存好的html格式：即可出现：<br><img src="https://zzblogimages.oss-cn-beijing.aliyuncs.com/202204231029546.png" alt></p><h4 id="HTML标题"><a href="#HTML标题" class="headerlink" title="HTML标题"></a>HTML标题</h4><p>HTML 标题（Heading）是通过 <code>&lt;h1&gt; - &lt;h6&gt;</code> 等标签进行定义的。<br>例如：</p><pre><code>&lt;h1&gt;This is first heading &lt;/h1&gt;&lt;h2&gt;This is second heading &lt;/h2&gt;&lt;h3&gt;This is thirst heading &lt;/h3&gt;</code></pre><h4 id="HTML段落"><a href="#HTML段落" class="headerlink" title="HTML段落"></a>HTML段落</h4><p>HTML 段落是通过 <code>&lt;p&gt;</code>标签进行定义的.<br>例如：</p><pre><code>&lt;p&gt;This is a paragraph.&lt;/p&gt;&lt;p&gt;This is another paragraph.&lt;/p&gt;</code></pre><h4 id="HTML-链接"><a href="#HTML-链接" class="headerlink" title="HTML 链接"></a>HTML 链接</h4><p>HTML 链接是通过 <code>&lt;a&gt;</code>标签进行定义的。<br>例如：href属性</p><pre><code>&lt;a href=&quot;http://www.baidu.com.cn&quot;&gt;</code></pre><h4 id="HTML图片"><a href="#HTML图片" class="headerlink" title="HTML图片"></a>HTML图片</h4><p>HTML 图像是通过 <code>&lt;img&gt;</code> 标签进行定义的。</p><p>例如：</p><pre><code>&lt;img src=&quot;/i/eg_w3school.gif&quot; width=&quot;300&quot; height=&quot;120&quot; /&gt;</code></pre><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><h4 id="CSS-指层叠样式表-Cascading-Style-Sheets"><a href="#CSS-指层叠样式表-Cascading-Style-Sheets" class="headerlink" title="CSS 指层叠样式表 (Cascading Style Sheets)"></a>CSS 指层叠样式表 (Cascading Style Sheets)</h4><p>样式定义如何显示 HTML 元素<br>样式通常存储在样式表中</p><h4 id="CSS语法"><a href="#CSS语法" class="headerlink" title="CSS语法"></a>CSS语法</h4><p>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明。<br>选择器通常是您需要改变样式的 HTML 元素。<br>每条声明由一个属性和一个值组成。<br>属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。</p><p>格式：</p><pre><code>selector &amp;#123;property: value&amp;#125;h1 &amp;#123;color:red; font-size:14px;&amp;#125;</code></pre><p>解释：<br>h1为选择器，color，font-size为属性，red,value为值<br>注意：值要是为若干个单词需要给值加引号</p><h3 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h3><p>JavaScript 是一种轻量级的编程语言。<br>JavaScript 是可插入 HTML 页面的编程代码。<br>JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行。<br>​</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
